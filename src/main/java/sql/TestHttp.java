package sql;

import com.alibaba.fastjson.JSON;
import com.alibaba.fastjson.JSONArray;
import com.alibaba.fastjson.JSONObject;
import org.apache.commons.io.FileUtils;
import org.apache.commons.io.IOUtils;
import org.apache.commons.lang3.StringUtils;
import org.apache.http.HttpEntity;
import org.apache.http.NameValuePair;
import org.apache.http.client.entity.UrlEncodedFormEntity;
import org.apache.http.client.methods.CloseableHttpResponse;
import org.apache.http.client.methods.HttpPost;
import org.apache.http.impl.client.CloseableHttpClient;
import org.apache.http.impl.client.HttpClients;
import org.apache.http.message.BasicNameValuePair;
import org.apache.http.util.EntityUtils;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

import java.io.File;
import java.io.IOException;
import java.io.UnsupportedEncodingException;
import java.util.ArrayList;
import java.util.List;

/**
 * 〈一句话功能简述〉
 * 〈功能详细描述〉
 *
 * @author simpleguy
 * @see [相关类/方法]（可选）
 * @since [产品 /模块版本] （可选）
 */
public class TestHttp {
    private static final Logger logger = LoggerFactory.getLogger(TestHttp.class);

    private static final CloseableHttpClient httpclient = HttpClients.createDefault();

    String potsIdStr = "3322021060109491790800,3302021060111063226800,3402021060111212745600,3352021060115186280400,3292021060118411639600,3302021060108275264401,3132021060109487390001,3432021060111088952801,2892021060112104896001,3352021060118162095201,3342021060118290390802,3132021060111538167603,3012021060112369067203,3432021060114057231604,3182021060115131401604,3062021060117446397204,2912021060112041176005,3182021060115346621605,3382021060118153027205,3352021060107421642406,3162021060108399398806,3052021060109482271206,2992021060111047308406,2972021060108520354807,2962021060110480387607,2962021060111198316007,2962021060112111340407,3012021060116560192807,2962021060118561741207,3082021060118393042408,3382021060118410544408,3102021060111471503209,3332021060115001608809,3162021060115381895210,3292021060108556634411,3322021060109380964811,3352021060113005164811,3432021060114490227211,2972021060115550046411,3062021060117441856811,2952021060114002754412,3082021060114082983612,3182021060108006669613,3312021060109307063213,3292021060109517566013,3412021060117039293213,3182021060108566460414,3322021060116040734014,3102021060113550074015,3102021060115446795615,2892021060109599012816,2962021060110424740416,3432021060110574410416,3292021060114427101616,2912021060112167476017,2992021060113072446417,3342021060118530175217,3102021060108095717618,3182021060114253516418,3312021060115192720018,3302021060110076053619,2992021060113085628819,2912021060116383522019,3102021060117474589619,3062021060118143370819,3302021060108257014820,2952021060111317598020,2932021060108554408021,3292021060111102916822,3432021060107309475623,2932021060108446533223,2962021060109303205223,2962021060112213118423,2952021060113437617623,3072021060108532719624,3072021060109037358024,2952021060114594464424,3422021060114310881225,3312021060118550653225,3432021060111362179626,3062021060112429342826,2912021060112570980026,3292021060113094060026,3292021060113243088426,3402021060108391362027,3342021060109254779227,2892021060113123500027,3292021060113332588027,3182021060116169977227,3302021060106484370428,3322021060109048526829,3312021060115241357629,2912021060112554948030,3052021060115080803630,3162021060115575448430,3352021060112014000831,2912021060112317540031,3082021060116446041631,3382021060117386555631,2892021060118253641631,3352021060107387648432,2952021060110089933632,2962021060116089420032,3362021060116136270032,3082021060108182704833,3292021060108481857233,3052021060109185368833,3402021060110373702833,3132021060112025759633,2952021060113159900833,3012021060116330154433,3082021060113330892434,3292021060115102198434,3302021060111097811235,3182021060112122926435,2952021060118355092035,3312021060107415240436,3072021060115473331236,3012021060116359414836,3292021060118361335236,3032021060118502562036,3432021060109574514437,2952021060110032759637,3432021060112217419637,3132021060113568104437,3382021060114305150037,3422021060110429071239,2892021060111257914839,3352021060118557914439,3312021060111585028040,2992021060115552725640,3012021060116400003240,3162021060111047444841,3032021060112242730041,3072021060114414272441,3332021060118416179241,3162021060112120348042,2892021060117346629642,2932021060113178237643,3052021060116360871643,3062021060109312053244,3162021060114091635244,3342021060115146140844,2892021060115177337244,3432021060116297238844,3362021060108193551245,2932021060108412798845,2932021060111022521645,2892021060113475136445,3072021060113589722445,2932021060113032282046,2892021060111366438047,3422021060115078608447,3292021060115487186047,3052021060118167647647,3332021060118380421247,3382021060109402261248,3432021060112479678848,3312021060113095281648,2962021060115502735248,3052021060109511493649,2912021060115070145649,3102021060117502194849,3402021060113162994850,2992021060115505741650,3062021060118294905651,3432021060116439362852,3182021060117308433652,3332021060110459670053,3312021060111458783253,3132021060114212794853,2912021060116178712053,3312021060118008350853,2962021060118190744053,3412021060107077390054,2892021060109578760854,3132021060110549200454,2992021060116054556454,3182021060111399166855,3062021060116181365655,3412021060110107687656,3292021060110458071256,3312021060111304779656,2932021060112575374056,3012021060111234734057,3322021060112069419258,2892021060112464107658,3082021060108367368859,3132021060115075658059,3412021060116167716059,3352021060118115698859,2912021060107053622060,2952021060107153727660,3182021060109251459260,2952021060109363881660,3012021060110395265260,3302021060114181232860,3432021060115096235260,2912021060116483379260,3312021060116591494060,3332021060118130668860,3182021060118471498860,3382021060110260022461,3402021060113516407661,3032021060115488483262,2962021060116542094862,3082021060111257332863,3052021060118470642864,3162021060110254488865,3302021060111490727665,2892021060118365910065,3132021060112481867266,3292021060113178870466,3012021060113183485266,3032021060113151688867,3182021060113568318067,3402021060115163861667,3052021060115502062467,3332021060111060033268,2962021060108405584069,3062021060109148524469,3062021060111272232069,3102021060112120976069,3342021060114034686869,2992021060107028630470,3322021060117162217270,3182021060112366491271,2912021060113389474072,3162021060115475208072,3162021060117390624872,3132021060117332200073,3052021060108285584074,2962021060111475491674,3072021060113311163274,3072021060118113012074,2972021060109192486475,3302021060112236901275,3322021060112246564475,3422021060116053668875,3332021060108331940076,3422021060109087939276,3102021060118070411676,2952021060109134737677,3422021060111149718077,3082021060111314858877,3292021060111593421277,3332021060107596886478,3432021060109281760478,3312021060110004468478,3412021060116014204478,3422021060109434307679,2962021060111341458879,3132021060109415670480,3432021060116173904880,3062021060116504668481,3362021060118334581681,3422021060111416773682,3342021060115065209282,2952021060108175174883,2972021060110511310083,2892021060112017702483,3182021060118586594083,2952021060115284672484,2962021060109505304885,3412021060112234071285,3052021060115277790885,3352021060116362226485,3132021060116407872085,3102021060111108448486,3072021060115116938486,2952021060118330557686,3162021060110038948087,3382021060105496784088,3322021060108434810888,2952021060109525680488,3012021060112156448888,2932021060113365184888,3322021060114026276088,2952021060107592902489,3182021060112049381289,3292021060113012937289,3382021060116575464889,2912021060110031992090,3072021060115208923290,2892021060118210622090,3102021060115159975292,2892021060108006643293,3292021060107502572494,3342021060109447069294,3412021060113206834094,3102021060113372453294,3082021060114429909294,3342021060116346155294,3072021060113587627695,2962021060118286118895,3382021060111530728896,2932021060118233065696,3102021060109053097697,3322021060111240849697,3322021060115330312097,3012021060109448758898,3132021060110565201298,3362021060113136638498,2952021060117258168898,3052021060109276723699,2932021060118297745700,3352021060110044462501,3312021060111092752501,2992021060115298254501,2952021060110598587302,3332021060115528196502,3132021060116328877702,3312021060118569288502,3012021060109238195303,2952021060113024041703,3012021060114178323703,2992021060115313032903,3302021060113155918904,3332021060116255737704,3362021060118227282104,2892021060107560633305,2952021060111084913305,3362021060113152640105,3182021060116127608105,3052021060116155488905,3332021060117443386505,3012021060110374378906,3422021060109030269707,3412021060110446294107,3162021060114279492907,3082021060116143755307,3132021060113296533708,3062021060114006342108,2972021060110349036109,3182021060110561064109,3182021060112271812909,2962021060114109922509,3422021060110219717710,3382021060111361506110,3012021060112428656111,3012021060118371673711,2952021060118580484111,3182021060111122302512,3352021060112251822112,2912021060116564954512,3342021060117037027312,3182021060108494262513,3362021060111409542513,3102021060113109310913,3422021060114122852913,3422021060112571158914,3302021060117431748114,3342021060117508137314,3062021060117561486914,3132021060108556494515,3382021060109396874515,2892021060111147922915,2992021060112103103315,2972021060114214382915,3082021060111090228516,3062021060112003644916,2932021060112350368916,3082021060108181788917,3362021060109066744117,3292021060116007073717,3352021060108059132918,3382021060111495848918,2992021060116597682118,2952021060109403019719,3072021060112559196519,3332021060113180983319,3012021060107219214520,3072021060108126997721,3382021060109543454121,3182021060110197038921,3332021060113027202122,3082021060113210090122,3032021060117033041322,3062021060110087128923,3082021060116440793723,3322021060117079910524,3362021060109357095325,2992021060112311790125,3292021060113437745725,3432021060114499992525,3362021060110115290126,3132021060110538179326,3302021060105202679327,3302021060110107629727,3082021060110268567727,3012021060111463782927,3072021060113215059727,3432021060114417394127,3342021060111124786929,2952021060108100489330,2892021060110358633730,3402021060115495526931,3062021060117094672531,3332021060110472536132,2962021060114239890932,3032021060110063148933,3432021060114025596933,2972021060117561476533,3412021060107056872134,2912021060107464974134,3342021060111062336534,3072021060109599162135,3182021060111231446535,3182021060112312629335,3412021060113544642135,3062021060105200224136,3432021060110476138136,3382021060110392561337,2992021060115025788137,3102021060109306104138,2892021060111009349738,3312021060111576708138,2952021060115366402938,2972021060115398890538,2932021060117163808939,3182021060113052754940,3132021060115393931740,3012021060116473530940,2962021060111264736941,3032021060112000979341,3422021060112145026141,2952021060110080786942,3352021060109261534943,3162021060118252367743,3312021060110293724544,3312021060116310064544,3162021060113431852545,3032021060114346932945,2892021060110348207346,3382021060111109052946,3012021060115217150546,2892021060110059704147,3102021060112435587747,3362021060114061663347,2962021060109158841748,3432021060109223644148,3182021060117416202548,3292021060109075072149,3032021060110104384949,3362021060111444257749,3432021060110202973750,3322021060111060002550,3292021060113131416950,3292021060116076970550,3012021060108482300551,3032021060110103538951,3422021060116452285751,3032021060116545779751,2962021060109426254552,3162021060111279708152,3292021060115280680152,2972021060109075404554,2972021060117354043354,3162021060118236847754,2912021060118466212954,3032021060113161293355,3322021060110124798956,3032021060112541217356,3352021060113116067356,3292021060116116800156,3362021060118454073756,3032021060109214690957,3342021060111299671357,3132021060112591529357,3012021060115518863757,2912021060109111945758,3312021060109381650558,3402021060114194971758,3052021060110473679359,3012021060112523660159,2912021060108024354960,2912021060110380999360,2952021060111254568960,2952021060112075296960,3082021060116194238960,3322021060117067168160,3422021060107332461361,3342021060109431481761,3382021060110139152561,3342021060112591967361,3052021060117354267761,3082021060111496518562,3132021060115470228562,3382021060115284143363,3342021060115373939363,2992021060107588294564,3182021060111191928964,2892021060114562079364,3072021060117423748164,3412021060118450590164,3382021060116167892165,3072021060116245106167,3032021060112066790168,3322021060113550172168,2932021060114348343368,3312021060115296426568,3072021060115394306968,2912021060118408836168,3132021060118483361368,2912021060106437872569,3382021060111324786569,3412021060113358493769,3352021060117199891369,3352021060107551271770,3332021060114303094570,3352021060117224086570,3322021060109315218571,3052021060110188797771,3322021060118111721771,3052021060110544597372,3132021060111540632572,3182021060114547566972,3102021060118322088172,3332021060107056372173,3302021060108247168973,2962021060109252662573,2972021060111341780573,3072021060112403377374,3182021060118043710975,3402021060110131516176,3082021060110327848976,3362021060110571575776,2912021060114059392176,2892021060107245228977,2972021060112005690577,3422021060112025674177,3032021060112021131777,3012021060114311427377,2892021060115248366977,3412021060114142136578,3312021060115424565778,3082021060116596410579,2992021060117303428579,3032021060109358496980,2912021060111241432580,3412021060112007135380,3362021060116362309780,3102021060109439835381,3012021060110359072181,3062021060115335560181,3352021060116137039381,2962021060116425632581,2912021060109154233782,3322021060112423778182,3012021060113114444182,3342021060108554686583,3312021060110335877383,3382021060114481272183,3362021060117293597384,3402021060108226501785,3182021060110055100585,2932021060110325788985,3362021060113491999385,3322021060108374072986,3082021060110106966186,3422021060111029018586,3322021060110394405787,3032021060114089950987,2952021060110304557388,3312021060115021970188,3412021060115131743788,3322021060109281808989,2932021060109290041789,3012021060110258435389,3162021060111595141389,2992021060114367526989,3012021060116080099389,3182021060118136166189,3032021060118506881789,3072021060106511140990,3072021060118391761390,2932021060109050016991,3052021060116577482191,3422021060112199109793,3182021060115558834993,3012021060108562247794,3312021060110529038994,2912021060113116486994,3312021060118255283795,3102021060109419195796,2992021060116218094196,3302021060112213868597,2912021060110421312598,3082021060116415722598,3422021060107323915799,3012021060113392126199,3412021060117321131399,3302021060112050455400,3362021060110106835401,2892021060110322200201,2972021060110324395001,3422021060113525593801,3292021060116303402601,3332021060116521395401,3322021060118537913401,3182021060108472647803,3382021060111232139803,2952021060112199770603,3322021060115111856203,3432021060115529952603,3382021060118472250603,2962021060109005280204,2892021060110408274204,3382021060112407433004,3312021060112592581404,3032021060115459804604,3292021060113066697405,3012021060115103612205,3312021060112455104606,2952021060113531533406,3012021060117420489406,3422021060109333705407,2912021060113264320607,3052021060118343719807,3422021060110335003408,3182021060114041677008,3032021060109029802209,3332021060115209485409,3082021060107326371810,2932021060112496001010,3422021060114289091410,3292021060117528986210,3072021060109130054611,2962021060110228292211,3382021060114309716211,3382021060110277631012,3352021060116237696212,3292021060106506213413,3102021060110022531813,3012021060110560837813,3182021060117247171013,3062021060118416699813,3062021060107055535014,3182021060109414211415,3402021060113558754615,3332021060113429463816,3402021060107496567017,3132021060110050580617,2952021060116113201417,3332021060111569726218,3132021060113371045018,2952021060113560449019,3422021060114103117019,2992021060117404182619,3182021060111418442620,3422021060108268643421,3072021060111097873021,3292021060115016048221,3312021060115227007821,3052021060111576289822,2952021060113108063422,3362021060118338510222,3332021060108151360623,3052021060109575665023,3062021060115196087023,3162021060116475792223,3292021060117067660623,3292021060117067073024,3342021060117077356224,2912021060113044090225,3432021060115225643825,2972021060110216014226,2992021060118377956226,2972021060110014271827,3312021060112045753427,2932021060114317521027,3012021060105047226228,3052021060111552978228,3072021060107528984229,3432021060110497862229,2892021060117444797829,2912021060118131849829,2972021060108216393830,3422021060108506977030,3032021060106364400631,3292021060117049494631,3062021060117412755031,3292021060109277210632,3132021060111457151432,2892021060115268561832,2912021060108571916234,3352021060109044438634,2932021060112475965034,3032021060113050658634,3432021060111071585835,3292021060113153482235,2912021060115118515035,3032021060115148939035,3312021060110335884236,2992021060111280732236,3362021060113029678236,3332021060115339526236,2932021060108160734637,2962021060108539157437,3342021060110294725037,3132021060110337917837,2892021060111262390637,3302021060114309822637,2992021060115443430237,3382021060117536894637,3412021060118203875437,3132021060109351180238,2952021060111015690638,2962021060110059961839,3292021060116177723439,2912021060109306566640,3322021060111232625440,2992021060111293525840,3082021060111297869440,3182021060113008704640,3322021060109316549441,2962021060111315311841,3102021060113531697841,3322021060111128703042,3082021060113518731442,3302021060115576113042,3382021060115571258642,3062021060109431545043,3412021060112369541043,3362021060112503455843,3072021060112304879444,3312021060114479851444,3332021060113092457045,3052021060114361213845,3082021060111342064646,3332021060117519416247,3292021060108360911448,3352021060110381787848,2962021060114339344250,3342021060114485751850,3292021060115131231450,2952021060116264323450,2892021060115061630251,3162021060113406279853,3062021060108027486654,3362021060109200121455,3402021060111401662255,3362021060112089265855,3322021060112121173855,3322021060113019228655,3102021060117593173455,3322021060109500659056,3292021060110590038256,3292021060113133327056,3332021060111182762657,3412021060111220859457,3312021060115367360257,3312021060117017356657,3132021060107284634658,3322021060112410914658,3312021060118223088658,3362021060106351410259,2912021060117453635059,2962021060109373053060,3012021060114331655460,3062021060114543093060,3182021060115203517060,3362021060118226739860,3302021060107349990261,3162021060111002284261,2952021060115309165061,3132021060118252879861,2992021060111131554262,3342021060112300123862,3332021060117043289862,3302021060116247740663,2912021060109213627464,3412021060110409557064,3382021060110447662664,3332021060111028037064,3402021060112589099464,3402021060116083671865,3102021060114091434266,3292021060118061602666,2912021060118139263466,3412021060110272802267,3412021060118134243867,3422021060108418583069,2912021060110369917869,3382021060111391270269,3412021060116485858269,2962021060118065277469,3302021060118304715869,3362021060110177117870,3082021060110559416270,3072021060115030063870,3342021060118209727070,3302021060111485095071,3312021060116395020671,3012021060108128862672,2932021060108563464672,3162021060110122053872,3162021060114240312272,3132021060118096864272,3352021060108474404674,3012021060109561063074,3162021060112077139075,3412021060113207747475,3422021060115592851875,3362021060116173268675,3302021060109359202676,3102021060113465062276,3072021060113535069076,3162021060114527339876,3422021060116533875876,3402021060109005377077,3052021060109065706277,3032021060117593701477,3352021060118030451077,2932021060118390617877,3052021060118433250277,2952021060114174212278,3102021060117314465478,3182021060105023435479,2892021060114053403879,3052021060116407583879,2932021060112077929480,3312021060113435113480,3302021060116463413882,3012021060110563239883,3162021060110586199883,3342021060114276830283,3032021060118282432683,3362021060114101899084,3132021060114149623084,3382021060115512597084,2932021060109447082285,3102021060109308590286,3422021060111463727886,3362021060112559913486,3402021060116119326686,3052021060108289977487,3032021060109572534287,3182021060110346066287,2912021060111314172287,3292021060111499137487,3182021060113232399087,3012021060115597564287,3422021060107274735888,2892021060109548259488,3332021060111017629488,3322021060115573373088,2892021060118031614688,3362021060109310757889,3052021060111429067889,3422021060112245011089,3082021060118175641089,3302021060111472312690,3072021060114047793090,3322021060115302331890,2912021060108423728691,3012021060110226685891,3422021060112566790291,3412021060115119733891,3422021060115352191091,3382021060109461351092,2962021060113052974692,3052021060118184988692,3332021060111252853493,3382021060116597604693,3012021060105174102694,3432021060112436157894,3432021060117275511894,3332021060117350834294,3292021060118176241094,3432021060111576425495,3352021060117149884695,3432021060118296492695,3132021060110364061896,3052021060113008033496,3062021060109599056297,2962021060111031543897,3332021060113431881497,3302021060117589687897,3332021060109275807098,2912021060111484860298,3082021060112154011898,3362021060113169475498,3292021060115187168698,2952021060115393324698,3432021060111291789899,3422021060112552731099,3432021060112487701901,2952021060115257989501,2932021060109438107502,3052021060110124833902,3382021060113038623902,3352021060113395267902,3182021060113483505502,3162021060114032355902,2932021060115530073902,3132021060112162584303,2962021060115183304703,3132021060118151170703,2912021060108573424304,3052021060112155524304,3302021060114514287904,2962021060115153547904,2972021060115343239904,3032021060114028286705,2992021060115115357505,3342021060108462993506,3362021060115093865506,3382021060116567924706,3432021060108242346708,3162021060114184307908,3012021060117046804708,3182021060118115611508,3412021060110003063109,3072021060113567828309,3102021060118377257509,3322021060109301249510,3432021060109442188310,2962021060113192745910,3432021060113345580310,3012021060109337427111,2962021060109484933111,3322021060112228504311,3082021060117098441111,3382021060110519449512,2932021060114436943113,2992021060116468921513,2892021060116540445513,3362021060107548381115,3322021060108535753515,3082021060112501051115,2992021060110514175516,3072021060118283427516,3412021060113327185517,3012021060118567147517,3102021060110113957918,3342021060117207965518,3422021060117327409518,3382021060110556514719,3332021060109330810721,3062021060115080838721,3332021060110100268722,3402021060112357486322,3302021060115179847122,3072021060117190210722,3362021060110434131523,3292021060111115880323,2912021060111458545923,3322021060115090957123,2962021060108442539524,3012021060110152758324,2912021060114178437524,3402021060115202648724,3102021060115300763924,2932021060111134189526,3362021060116216669126,3312021060116398710726,3402021060107022595127,3402021060112239117127,3352021060115481120727,2992021060116523697927,3052021060113126864728,2952021060115381513128,3162021060111452550730,2962021060111589934330,2932021060113563788330,3102021060117216973530,3102021060108584792331,3062021060110291021131,3162021060113029913931,3422021060113352861531,3362021060115114231531,2932021060115443932331,3132021060109222569132,3332021060112253099132,2912021060114412287132,3362021060118512117532,3162021060110447203133,3132021060111293396733,3072021060112015319533,3322021060115477919933,2972021060109449687534,2962021060110231974734,3382021060111355084735,2892021060115296427135,3132021060114043036336,3312021060116257227536,2932021060116406136736,3422021060109105179137,3132021060116145999137,3432021060117239757537,3052021060108238307538,3352021060112390231138,2932021060108118006739,2952021060108508174339,3322021060112058111939,2972021060115411578739,3432021060117206571939,3332021060118144665539,3352021060118348515939,3062021060107354013540,3052021060110302522340,3102021060110578451540,3032021060114530574340,3292021060116110491140,3292021060117071094340,3052021060107045556741,3132021060113592749541,3052021060118176333141,3332021060111338279942,3292021060116326218743,3182021060110568758344,3012021060113245421944,3012021060110450451145,3302021060111273461945,3292021060117152002345,3292021060117347431946,3342021060107417142347,3102021060110282950347,3052021060112079999147,3032021060111207723948,3332021060115473643548,3062021060116168630748,3352021060118136499548,3102021060111460553949,3412021060113106397949,2932021060109113715950,2932021060110483705150,3332021060113034309550,3072021060117276111150,3322021060118338745150,3382021060116098348351,3132021060107580276752,3422021060108084441552,2912021060110280632752,2892021060110525114352,3422021060109044085153,3102021060113431311953,3062021060115458786353,3182021060118428274753,3082021060112072728354,2992021060116215481955,3412021060114197643556,2972021060114329374756,3422021060115132682356,3132021060118521719956,2962021060108182089958,3132021060110436811958,2912021060112579368358,3322021060110041011159,3402021060118436055559,3332021060107584721160,2932021060111534553160,3322021060112085846360,3052021060118073643160,3312021060113382955961,3422021060114415626361,3382021060118143203161,3292021060118276363961,3332021060109290211962,3062021060112166174762,3182021060112471622362,3162021060115223165962,3082021060115380369962,3362021060117068122762,3432021060117218711962,3332021060117465161162,3012021060110196421163,2932021060110576224363,3312021060112085570363,3402021060114042725564,3182021060115469367564,2892021060113101064765,3302021060115386352365,3102021060111576289566,3302021060117070665566,2892021060111512367167,3072021060114494271167,3292021060117049219567,3052021060110358443169,3102021060111478185569,2962021060114053312769,2972021060116085049169,3102021060116092677969,2932021060117040425969,2952021060109269251970,3072021060114445724370,3332021060110438441171,3062021060112189376771,2892021060114384639571,2952021060116487181571,3332021060112483463972,3382021060116186658772,2992021060107254591173,3342021060110269585573,3362021060112519937973,3292021060110276521974,3422021060110526635974,3032021060109003971575,3422021060116264666775,3402021060113141653576,3322021060118163425176,3162021060110495293177,3412021060112426052377,3072021060116043897977,3362021060117509724777,3132021060111467916378,3412021060111228999579,3012021060112076415579,2962021060113413927179,3072021060114247879179,3362021060111023706380,3352021060114458551980,2972021060117138425581,3012021060117515444381,3132021060108578935582,3422021060113031926782,2952021060108130956383,3362021060117045573583,2962021060111493883584,3052021060112199269184,3402021060113392706784,3162021060115436145984,2972021060110349059185,3322021060110581222785,3432021060113089225985,3052021060114066539585,2962021060114147507185,3072021060116267083985,2892021060118089410385,3302021060110287912386,2952021060110472051986,2912021060114558303586,3302021060118502815986,3352021060108015697987,3322021060108316835987,3132021060109239934787,2932021060113004006788,3012021060112189904789,2962021060112585305589,3032021060114090836789,2992021060116557337189,2932021060109560529591,3292021060116187269991,3362021060111228056792,3062021060112591702792,3132021060117457167992,3292021060117550983192,3292021060107592651993,3422021060115503504393,3302021060110441526794,2992021060115213079194,2972021060108358987195,3032021060109436713595,2962021060112553420395,3362021060113125317595,3382021060114108511595,3322021060109241748397,3052021060114112662797,3302021060117160333997,3332021060109285477598,2932021060110447877998,3342021060109311067599,3362021060111213950799";
    String cookie = "JSESSIONID=dMztBsjrz1-g6B735kZ0Ofcu.o2opoasprdapp14; _ga=GA1.2.324841428.1591087608; experimentation_subject_id=ImFiZTIxZjEwLThlYzEtNDA2Ny1iMDFkLTYzMjQ4YTQwYTZlMyI=--06abe0db167d912a16d4bb97d880cc55f82f0fad; hm_guid=0827e6f8-136e-47ad-abac-7cf038b36636; _df_ud=3627d692-5ba2-4033-8703-bce522b3c797; iar_sncd=0; _snvd=1611913371393x4tT83fxgKy; tradeMA=33; _snma=1|158881591776882208|1588815917768|1623153796672|1623153804737|439|91; isso_ld=true; isso_us=simpleguy; jira_user_no=simpleguy; scm-prd=si3A83955790D421FBD21E535A179F8182; custno=simpleguy; snf-zookeeper-web-pre=siADA66999B8055664319FE66E87CB4D99; secureToken=15753B4841CC275D3F383B7B94A1CB5E; idsLoginUserIdLastTime=simpleguy; _snmb=162443732546399347||1624437325463|0; authId=siDC8E5F1946F8FFE83560F3439EB0D80D";

    public static void main(String[] args) throws Exception {
        TestHttp testHttp = new TestHttp();
        queryCommodityUpdate();
    }

    private static void queryCommodtyCode() throws IOException {
        List<String> resultList = new ArrayList<>();
        TestHttp testHttp = new TestHttp();
        File file = new File("D:\\2\\3.txt");
        List<String> list = FileUtils.readLines(file);
        for (String s : list) {
            String result = testHttp.postCommdtyCode(s.trim());
            resultList.add(s.trim() + "|" + result);
        }
        FileUtils.writeLines(new File("D:\\2\\4.txt"), resultList);
    }

    private static void queryCommodityUpdate() throws Exception {
        List<String> resultList = new ArrayList<>();
        TestHttp testHttp = new TestHttp();
        String str = "982,981,976,975,967,966,963,962,959,956,955,128";
        String[] array = StringUtils.split(str, ",");
        for (String shopCode : array) {
            testHttp.getCommodtyUpdate(shopCode, resultList);
        }
        resultList.forEach(System.out::println);
    }

    public void spilt() {
        String[] array = StringUtils.split(potsIdStr, ",");
        for (String s : array) {
            System.out.println("updateStatus('" + s + "');");
        }
    }

    public void batchUpdate() throws Exception {
        String[] potsIdArray = StringUtils.split(potsIdStr, ",");
        for (String potsId : potsIdArray) {
            updateStatus(potsId, "CF_DB_TRANS", "0");
        }
    }

    public void batchQueryStatus() throws Exception {
        String[] potsIdArray = StringUtils.split("5332021060319151097692,5332021060319144021917", ",");
        for (String potsId : potsIdArray) {
            String result = queryStatus(potsId, "CF_DB_TRANS");
            JSONObject jsonObject = JSON.parseObject(result);
            JSONArray data = jsonObject.getJSONArray("data");
            JSONObject jsonObject1 = data.getJSONObject(0);
            String status = jsonObject1.getString("STATUS_VALUE");
            if (!"1".equals(status)) {
                System.out.println("potsId=" + potsId + " result= " + jsonObject1);
            }
        }
    }

    public void updateStatus(String potsId, String statusName, String statusValue) throws Exception {
        String url = "http://test.com/o2opoas-admin/status/updateStatus.htm";
        List<NameValuePair> nvps = new ArrayList<>();
        nvps.add(new BasicNameValuePair("statusValue", statusValue));
        nvps.add(new BasicNameValuePair("modifyId", potsId));
        nvps.add(new BasicNameValuePair("statusName", statusName));
        String result = post(url, new UrlEncodedFormEntity(nvps), cookie);
        System.out.println(result);
    }

    public String queryStatus(String potsId, String statusName) throws Exception {
        String url = "http://test.com/o2opoas-admin/status/queryStatusInfoNew.htm";
        List<NameValuePair> nvps = new ArrayList<>();
        nvps.add(new BasicNameValuePair("queryIdType", "POTS_ID_TYPE"));
        nvps.add(new BasicNameValuePair("queryId", potsId));
        nvps.add(new BasicNameValuePair("statusName", statusName));
        nvps.add(new BasicNameValuePair("page", "1"));
        nvps.add(new BasicNameValuePair("limit", "50"));
        String result = post(url, new UrlEncodedFormEntity(nvps), cookie);
        return result;
    }

    public void getCommodtyUpdate(String shopCode, List<String> resultList) throws Exception {
        String url = "http://test.com/o2opoas-admin/cfCommdtyNewManager/queryCommodityUpdate.htm";
        List<NameValuePair> nvps = new ArrayList<>();
        nvps.add(new BasicNameValuePair("storeCode", shopCode));
        nvps.add(new BasicNameValuePair("page", "1"));
        nvps.add(new BasicNameValuePair("limit", "100"));
        String result = post(url, new UrlEncodedFormEntity(nvps), cookie);
        JSONObject jsonObject = JSON.parseObject(result);
        JSONArray data = jsonObject.getJSONArray("data");
        JSONObject jsonObject1 = data.getJSONObject(0);
        List<String> list = new ArrayList<>();
        list.add(jsonObject1.getString("storeCode"));
        list.add(jsonObject1.getString("total"));
        list.add(jsonObject1.getString("finish"));
        list.add(jsonObject1.getString("pending"));
        list.add(jsonObject1.getString("mtTotal"));
        list.add(jsonObject1.getString("mtFinish"));
        list.add(jsonObject1.getString("eleTotal"));
        list.add(jsonObject1.getString("eleFinish"));
        resultList.add(StringUtils.join(list, "|"));
    }

    public String post(String url, HttpEntity entity, String cookie) throws Exception {
        long start = System.currentTimeMillis();
        HttpPost httpPost = new HttpPost(url);
        httpPost.addHeader("Cookie", cookie);
        httpPost.setEntity(entity);
        try (CloseableHttpResponse response = httpclient.execute(httpPost)) {
            String result = EntityUtils.toString(response.getEntity());
            System.out.println(String.format("cost=%dms,  request = %s result = %s", System.currentTimeMillis() - start, IOUtils.toString(entity.getContent()), result));
            return result;
        }

    }

    public String postCommdtyCode(String cmmdtyCode) throws UnsupportedEncodingException {
        HttpPost httpPost = new HttpPost("http://test.com/o2opoas-admin/jlfCommdtyCodeQuery/queryCmmdtyInfoNew.htm");
        List<NameValuePair> nvps = new ArrayList<>();
        nvps.add(new BasicNameValuePair("supplierCmmdtyCode", cmmdtyCode));
        nvps.add(new BasicNameValuePair("page", "1"));
        nvps.add(new BasicNameValuePair("limit", "100"));
        httpPost.addHeader("Cookie", cookie);
        httpPost.setEntity(new UrlEncodedFormEntity(nvps));
        try (CloseableHttpResponse response2 = httpclient.execute(httpPost)) {
            HttpEntity entity = response2.getEntity();
            System.out.println(response2);
            String result = EntityUtils.toString(entity);
            System.out.println("result=" + result);
            JSONObject jsonObject = JSON.parseObject(result);
            JSONArray data = jsonObject.getJSONArray("data");
            JSONObject jsonObject1 = data.getJSONObject(0);
            String code = jsonObject1.getString("cmmdtyCode");
            return code;
        } catch (IOException e) {
            e.printStackTrace();
        }

        return null;
    }


    public void postShopCode(String shopCode) throws Exception {

        HttpPost httpPost = new HttpPost("http://test.com/o2opoas-admin/jlfShopCodeQuery/queryShopRelationsNew.htm");
        List<NameValuePair> nvps = new ArrayList<>();
        nvps.add(new BasicNameValuePair("zsndm", shopCode));
        nvps.add(new BasicNameValuePair("page", "1"));
        nvps.add(new BasicNameValuePair("limit", "100"));
        httpPost.addHeader("Cookie", cookie);
        httpPost.setEntity(new UrlEncodedFormEntity(nvps));
        try (CloseableHttpResponse response2 = httpclient.execute(httpPost)) {
            HttpEntity entity = response2.getEntity();
            System.out.println(response2);
            String result = EntityUtils.toString(entity);
            System.out.println("result=" + result);
            JSONObject jsonObject = JSON.parseObject(result);
            JSONArray data = jsonObject.getJSONArray("data");
            for (int i = 0; i < data.size(); i++) {
                JSONObject jsonObject1 = data.getJSONObject(i);
                if ("M".equals(jsonObject1.getString("zsqlx"))) {
                }
            }
        }

    }

    public void queryAndDeleteCommodityCreate() throws Exception {
        String url = "http://test.com/o2opoas-admin/commodityRetryManager/queryCommodityRetry.htm";
        List<NameValuePair> nvps = new ArrayList<>();
        nvps.add(new BasicNameValuePair("taskStatus", "2"));
        nvps.add(new BasicNameValuePair("page", "1"));
        nvps.add(new BasicNameValuePair("limit", "100"));
        nvps.add(new BasicNameValuePair("errorType", "2"));
        nvps.add(new BasicNameValuePair("channelType", "ELE"));
        String result = post(url, new UrlEncodedFormEntity(nvps), cookie);
        JSONObject jsonObject = JSON.parseObject(result);
        JSONArray data = jsonObject.getJSONArray("data");
        JSONArray array = new JSONArray();
        for (int i = 0; i < data.size(); i++) {
            JSONObject object = data.getJSONObject(i);
            array.add(object.getString("rowid") + "-" + object.getString("versionNo"));
        }

        url = "http://test.com/o2opoas-admin/commodityRetryManager/operate.htm";
        nvps = new ArrayList<>();
        nvps.add(new BasicNameValuePair("operateType", "2"));
        nvps.add(new BasicNameValuePair("channelType", "ELE"));
        nvps.add(new BasicNameValuePair("rowids", array.toString()));
        result = post(url, new UrlEncodedFormEntity(nvps), cookie);


    }

}
